.. _quickstart:

*********
 快速上手
*********

下面之範例，輸入以及輸出將以 REPL 之提示字元區隔 (:term:`>>>` 以及 :term:`...`)，如果要
重現範例，請務必輸入 :term:`>>>` 之後的所有內容。沒有以 REPL 提示字元開頭的是輸出結果。


認識 Stock
==========

在 twstock 之中，我們可以使用 :class:`Stock` 來取得歷史股票資訊。

歷史資料
-------

舉例而言::

   >>> import twstock
   >>> stock = twstock.Stock('2330')
   >>> stock.sid  # 回傳股票代號
   '2330'
   >>> stock.price  # 回傳各日之收盤價
   [207.5, 208.0, 207.0, 208.0, 211.5, 213.0, 216.5, 215.5, 218.0,
    217.0, 215.0, 211.5, 208.5, 210.0, 208.5, 209.0, 207.0, 208.5,
    207.5, 206.0, 206.0, 212.0, 210.5, 214.5, 213.0, 213.0, 214.0,
    214.5, 215.5, 214.0, 214.5]
   >>> stock.high  # 回傳各日之最高價
   [210.0, 208.5, 209.5, 208.0, 212.0, 213.0, 218.0, 217.0, 218.0,
    218.5, 215.0, 214.0, 210.0, 210.5, 208.5, 209.0, 208.5, 208.5,
    208.5, 207.5, 207.0, 212.0, 212.5, 216.0, 214.5, 215.5, 214.0,
    215.0, 215.5, 215.0, 214.5]

在 :class:`Stock` 之中的資料，愈前面之資料越舊，愈後面之資料愈新，可以透過
:attr:`date` 取得各個資料集之中相對應的日期::


   >>> stock.date  # 回傳資料之對應日期
   [datetime.datetime(2017, 6, 12, 0, 0),
    datetime.datetime(2017, 6, 13, 0, 0),
    datetime.datetime(2017, 6, 14, 0, 0),
    datetime.datetime(2017, 6, 15, 0, 0),
    ..., 
    datetime.datetime(2017, 7, 21, 0, 0),
    datetime.datetime(2017, 7, 24, 0, 0)]

獲取其他日期之資料
---------------

同時，:class:`Stock` 預設建立時會取得近 31 日開盤之資料，如果需要其他日期之資料，可透過
不同之 fetch 功能獲得::

   >>> stock.fetch(2015, 7)  # 獲取 2015 年 7 月之股票資料
   >>> stock.fetch(2010, 5)  # 獲取 2010 年 5 月之股票資料
   >>> stock.fetch_31()      # 獲取近 31 日開盤之股票資料
   >>> stock.fetch_from(2000, 10)  # 獲取 2000 年 10 月至今日之股票資料


基本股票資訊分析
-------------

:class:`Stock` 內建基本股票分析功能，可以透過這些 method 來使用::

   >>> stock.moving_average(5, stock.price)  # 計算五日平均價格
   [208.4, 209.5, 211.2, 212.9, 214.9, 216.0, 216.4, 215.4,
    214.0, 212.4, 210.7, 209.5, 208.6, 208.6, 208.1, 207.6,
    207.0, 208.0, 208.4, 209.8, 211.2, 212.6, 213.0, 213.8,
    214.0, 214.2, 214.5]
   >>> stock.moving_average(5, stock.capacity)  # 計算五日平均交易量
   [40904388.2, 31779953.2, 27540112.6, 28800229.2, 30121867.6,
    31487778.6, 40018023.8, 43162160.8, 44540048.6, 44730965.6,
    43135743.0, 35320904.6, 30738402.0, 24976223.8, 22618522.2,
    20590067.6, 19042051.8, 21642392.4, 22327332.0, 29302556.6,
    29461849.0, 31076569.0, 27909064.6, 26663795.2, 20795579.4,
    19407173.2, 19127688.4]
   >>> stock.ma_bias_ratio(5, 10)  # 計算五日、十日乖離值
   [3.8000000000000114, 3.450000000000017, 2.0999999999999943,
    0.5500000000000114, -1.25, -2.6500000000000057,
    -3.4499999999999886, -3.4000000000000057, -2.700000000000017,
    -2.1500000000000057, -1.5500000000000114, -1.25, 
    -0.30000000000001137, -0.09999999999999432,
    0.8500000000000227, 1.799999999999983, 2.799999999999983, 2.5,
    2.700000000000017, 2.0999999999999943, 1.5, 0.9499999999999886]



